generator client {
  provider        = "prisma-client-js"
  // Allows prisma to use multiple schema files
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role { 
  User 
  Admin
}

enum MembershipStatus { 
  Active
  Inactive
}

enum MembershipType { 
  Free
  Premium
}

enum MembershipPlan { 
  OneMonth 
  OneYear
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  role      Role    @default(User)
  age      Int? 
  username String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // One User Can Have One Memberships
  membership Membership? 
}  

model Membership {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  status MembershipStatus?
  type MembershipType @default(Free)
  plan MembershipPlan? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region { 
  id        String   @id @default(uuid())
  name      String   @unique
  // One Region Can Have Multiplies Stories
  story Story[]
  // One Region Can Have Multiplies Vocab
  vocab Vocabulary[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vocabulary { 
  id String @id @default(uuid())
  pronouncation String 
  vocabText String 
  translatedText String
  // One Vocabulary Can Have One Region
  region Region @relation(fields: [regionId], references: [id])
  regionId String
  // One Vocabulary Can Have One Story
  story Story? @relation(fields: [storyId], references: [id])
  storyId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Story { 
  id String @id @default(uuid())
  title String 
  originalText String 
  englishText String 
  unlocked Boolean @default(false)
  region Region @relation(fields: [regionId], references: [id])
  regionId String
  // One Story Can Have Multiplies Vocab
  vocab Vocabulary[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
